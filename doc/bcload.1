...\" $Header: /usr/src/docbook-to-man/cmd/RCS/docbook-to-man.sh,v 1.3 1996/06/17 03:36:49 fld Exp $
...\"
...\"	transcript compatibility for postscript use.
...\"
...\"	synopsis:  .P! <file.ps>
...\"
.de P!
\\&.
.fl			\" force out current output buffer
\\!%PB
\\!/showpage{}def
...\" the following is from Ken Flowers -- it prevents dictionary overflows
\\!/tempdict 200 dict def tempdict begin
.fl			\" prolog
.sy cat \\$1\" bring in postscript file
...\" the following line matches the tempdict above
\\!end % tempdict %
\\!PE
\\!.
.sp \\$2u	\" move below the image
..
.de pF
.ie     \\*(f1 .ds f1 \\n(.f
.el .ie \\*(f2 .ds f2 \\n(.f
.el .ie \\*(f3 .ds f3 \\n(.f
.el .ie \\*(f4 .ds f4 \\n(.f
.el .tm ? font overflow
.ft \\$1
..
.de fP
.ie     !\\*(f4 \{\
.	ft \\*(f4
.	ds f4\"
'	br \}
.el .ie !\\*(f3 \{\
.	ft \\*(f3
.	ds f3\"
'	br \}
.el .ie !\\*(f2 \{\
.	ft \\*(f2
.	ds f2\"
'	br \}
.el .ie !\\*(f1 \{\
.	ft \\*(f1
.	ds f1\"
'	br \}
.el .tm ? font underflow
..
.ds f1\"
.ds f2\"
.ds f3\"
.ds f4\"
.ta 8n 16n 24n 32n 40n 48n 56n 64n 72n 
.TH "\fBbcload\fP" "1"
.SH "NAME"
\fBbcload\fP \(em ZeitControl Firmware downloader for enhanced BasicCard Smart Cards
.SH "SYNOPSIS"
.PP
\fBbcload\fP [-?hlptv?]  [-d\fI debug_level\fP]  [-f\fI fname\fP]  [-r\fI reader\fP] 
.SH "DESCRIPTION"
.PP
The \fBbcload\fP command is a firmware downloader for
ZeitControl BasicCard Smart Cards\&.  \fBBcload\fP is based
off the bcload example included in the development environment\&.
\fBBcload\fP has only been tested with ZC3\&.9 Smart Card
hardware\&.  Small changes would be required to support the Professional
line of cards\&.
.SH "OPTIONS"
.IP "-d, --debug=\fI debug_level\fP" 10
Set debug level\&.
.IP "-f, --image=\fI fname\fP" 10
Name of BasicCard Image file\&.  Defaults to HOTPC\&.IMG
.IP "-h, --help" 10
Help\&.
.IP "-l, --list-readers" 10
List SC Readers
.IP "-p, --no-paranoid" 10
Disable paranoid check for ZC3\&.9 hardware\&.  Enhanced Smart Cards will
probably work, support for the professional cards require changes
to \fBbcload\&.c\fP\&.
.IP "-r, --reader=\fI reader\fP" 10
Set Smart Card reader\&.  Use -l to list available readers\&.  A reader
is defined as class:reader:[option]\&.  PCSC and embedded
are the two available classes\&.  The embedded class contains the acr30s driver
which is specified as embedded:acr30s:[serial_port]\&.
If pcscd is running the first PC/SC reader will be the default followed by
the embedded acr30s driver\&.  Use PCSC: for the first available PC/SC
reader\&.  Use embedded:acr30s:/dev/cuaU0 for the embedded acr30s driver
with serial port /dev/cuaU0\&.
.IP "-t, --force-test" 10
Force card mode to TEST after programming\&.  Defaults to the mode
specified in the image file\&.
.IP "-v, --verbose" 10
Display verbose status messages while programming the card\&.
.IP "--version" 10
Display software version\&.
.SH "EXAMPLES"
.PP
Download the HOTPC\&.IMG file to the default Smart Card reader\&.  Display
verbose results\&.
.PP
.nf
\fBbcload -v -f HOTPC\&.IMG\fP 
\f(CWCard/State: ZC3\&.9 test
EEChunkSize=2000
BCSetState: load
SC: Reset
EEStart=8020,EELen=1fa0
imgAddr=8020,imgLen=1fa0
Clear: addr=8020,len=1fa0
BCClearEEProm: success
SC: Reset
EEWRITE: nWrites=118,addr=8020,len=1e
EEWRITE: nWrites=117,addr=8038,len=10
EEWRITE: nWrites=116,addr=8170,len=38
\&.\&.\&.
EEWRITE: nWrites=1,addr=9f40,len=48
EEWRITE: nWrites=0,addr=9f80,len=48
EECRC: nWrites=1,addr=8020,len=1fa0,imgCRC=b17a
EECRC: SCCRC=b17a
EECRC: nWrites=0,addr=8020,len=00,imgCRC=00
EECRC: SCCRC=0
BCSetState: test
BCSetState: test\fP
.fi
.SH "AUTHOR"
.PP
Mark Fullmer maf@splintered\&.net
.SH "SEE ALSO"
.PP
\fBotp-control\fP(1)
\fBotp-sca\fP(1)
\fBotp-sct\fP(1)
\fBpam_otp\fP(1)
\fBhtsoft-downloader\fP(1)
\fBotp-ov-plugin\fP(1)
\fBurd\fP(1)
spyrus-par2(7)
...\" created by instant / docbook-to-man, Thu 12 Dec 2013, 10:40
