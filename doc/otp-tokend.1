...\" $Header: /usr/src/docbook-to-man/cmd/RCS/docbook-to-man.sh,v 1.3 1996/06/17 03:36:49 fld Exp $
...\"
...\"	transcript compatibility for postscript use.
...\"
...\"	synopsis:  .P! <file.ps>
...\"
.de P!
\\&.
.fl			\" force out current output buffer
\\!%PB
\\!/showpage{}def
...\" the following is from Ken Flowers -- it prevents dictionary overflows
\\!/tempdict 200 dict def tempdict begin
.fl			\" prolog
.sy cat \\$1\" bring in postscript file
...\" the following line matches the tempdict above
\\!end % tempdict %
\\!PE
\\!.
.sp \\$2u	\" move below the image
..
.de pF
.ie     \\*(f1 .ds f1 \\n(.f
.el .ie \\*(f2 .ds f2 \\n(.f
.el .ie \\*(f3 .ds f3 \\n(.f
.el .ie \\*(f4 .ds f4 \\n(.f
.el .tm ? font overflow
.ft \\$1
..
.de fP
.ie     !\\*(f4 \{\
.	ft \\*(f4
.	ds f4\"
'	br \}
.el .ie !\\*(f3 \{\
.	ft \\*(f3
.	ds f3\"
'	br \}
.el .ie !\\*(f2 \{\
.	ft \\*(f2
.	ds f2\"
'	br \}
.el .ie !\\*(f1 \{\
.	ft \\*(f1
.	ds f1\"
'	br \}
.el .tm ? font underflow
..
.ds f1\"
.ds f2\"
.ds f3\"
.ds f4\"
.ta 8n 16n 24n 32n 40n 48n 56n 64n 72n 
.TH "\fBotp-tokend\fP" "1"
.SH "NAME"
\fBotp-tokend\fP \(em Deliver tokens via SMTP(S) or HTTP(S)\&.
.SH "SYNOPSIS"
.PP
\fBotp-tokend\fP [-?Dv]  [-b\fI bind-path\fP]  [-f\fI from-address\fP]  [-s\fI subject\fP]  [-S\fI smtp_url\fP]  [-P\fI pidfile\fP]  [-H\fI httl_url\fP] 
.SH "DESCRIPTION"
.PP
The \fBotp-tokend\fP daemon processes send-token
requests from the Unix domain socket \fB/var/run/otp-tokend\fP\&.
Tokens are then delivered to the end-user via SMTP, SMTPS, HTTP, or HTTPS\&.
Delivery through SMS or other out of band mechanisms can be implemented
with a HTTPS back end\&.
.PP
Otplib will optionally generate a send-token request when the user record has
the send-token flag and location information set\&.  This can be done with
\fBotp-control\fP\&.
.PP
The send-token request is a single datagram with the following ASCII fields
separated by newlines:
.PP
.nf
service
username
location
token
.fi
.PP
If the location (destination to send the token) is all digits the request is
sent via HTTP(S)\&.  A request with the @ symbol is sent via SMTP(S)\&.  All other
requests are ignored\&.
.SH "OPTIONS"
.IP "-b, --bind-path=\fI bind_path\fP" 10
Listen for send-token requests from an alternate Unix domain socket\&.
.IP "-D, --disable-daemon-mode" 10
Disable daemon mode\&.  When specified \fBotp-tokend\fP will not
run in the background and stdout is available for debugging information\&.
.IP "-f, --from-address=\fI from_address\fP" 10
Specify the e-mail from address when using SMTP(S)\&.
.IP "-s, --subject=\fI subject\fP" 10
Specify the e-mail subject when using SMTP(S)\&.
.IP "-s, --smtp-url=\fI smtp_url\fP" 10
Specify the URL to an SMTP(S) server\&.  Example smtp://127\&.0\&.0\&.1\&.
.IP "-P, --pidfile=\fI pid_file\fP" 10
Specify an alternate location for a file containing the process ID
of the \fBotp-tokend\fP server\&.
.IP "-H, --http-url=\fI http_url\fP" 10
Specify the URL to an HTTP(S) server\&.  A form will be posted to the
url with the form "to" set to the location, and
"msg" set to the token\&.
.IP "-v, --verbose" 10
Increase verbosity\&.  Can be used multiple times\&.
.IP "--version" 10
Display software version\&.
.SH "EXAMPLES"
.PP
Start the \fBotp-tokend\fP server in the foreground with verbose
output using https://127\&.0\&.0\&.1:443/sms for HTTP and and smtp://127\&.0\&.0\&.1 for SMTP requests\&.
.PP
.nf
otp-tokend -D -vvv -S smtp://127\&.0\&.0\&.1 -H https://127\&.0\&.0\&.1:443/sms
.fi
.SH "AUTHOR"
.PP
Mark Fullmer maf@splintered\&.net
.SH "SEE ALSO"
.PP
\fBotp-control\fP(1)
\fBotp-sca\fP(1)
\fBotp-sct\fP(1)
\fBpam_otp\fP(1)
\fBhtsoft-downloader\fP(1)
\fBbcload\fP(1)
\fBotp-ov-plugin\fP(1)
spyrus-par2(7)
...\" created by instant / docbook-to-man, Thu 12 Dec 2013, 10:40
